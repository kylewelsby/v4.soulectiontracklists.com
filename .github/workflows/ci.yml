name: 🚀 Ship

on:
  push:
    branches:
      - main
      - nuxt-new

jobs:
  lint:
    name: Lint 🚨
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

  deploy:
    needs:
      - lint
    name: Web Deployment 🚀
    if: contains(github.ref, 'refs/tags') == false || github.event_name == 'release'
    runs-on: ubuntu-20.04

    steps:
      - name: Check for XDN deploy token 👀
        if: env.XDN_DEPLOY_TOKEN == ''
        run: |
          echo You must define the "XDN_DEPLOY_TOKEN" secret in GitHub project settings
          exit 1
        env:
          XDN_DEPLOY_TOKEN: ${{secrets.XDN_DEPLOY_TOKEN}}
      - name: Extract branch name 🛠
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Checkout Content 🗃
        uses: actions/checkout@master
        with:
          repository: kylewelsby/soulectiontracklists.com
          ref: master
          path: source
          token: ${{ secrets.PAT }}

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Deploy to XDN 🚀
        run: yarn run xdn:deploy ${{'--branch=$BRANCH_NAME' || ''}} --token=$XDN_DEPLOY_TOKEN ${{github.event_name == 'push' && env.BRANCH_NAME == 'main' && '--environment=staging' || ''}} ${{github.event_name == 'release' && '--environment=production' || ''}}
        env:
          XDN_DEPLOY_TOKEN: ${{secrets.XDN_DEPLOY_TOKEN}}
