name: 🚀 Ship

on:
  push:
    branches:
      - main
      - nuxt-new

jobs:
  setup:
    name: Setup 📦
    runs-on: ubuntu-20.04
    env:
      NUXT_TELEMETRY_DISABLED: 1
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn 📦
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            node_modules
            ~/.cache/Cypress

          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install dependencies 👨🏻‍💻
        run: yarn --check-files --frozen-lockfile --non-interactive

      - name: Build 📦
        run: yarn run layer0:build
        env:
          BASE_URL: https://soulection.com
          SUPABASE_URL: ${{secrets.SUPABASE_URL}}
          SUPABASE_KEY: ${{secrets.SUPABASE_KEY}}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

      - name: Cache workspace 📦
        uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            node_modules
            .cache/Cypress
            ./*
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-app-${{ github.sha }}
  lint:
    name: Lint 🚨
    needs: setup
    runs-on: ubuntu-20.04
    env:
      NUXT_TELEMETRY_DISABLED: 1
      CI: 1
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Cache workspace 📦
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache/Cypress
            ./*
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-app-${{ github.sha }}

      - name: Run linter 👀
        run: yarn lint

  test:
    name: Test 🧪
    needs: setup
    runs-on: ubuntu-20.04
    env:
      NUXT_TELEMETRY_DISABLED: 1
      CI: 1
      TERM: xterm
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Cache workspace 📦
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache/Cypress
            ./*
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-app-${{ github.sha }}

      - name: Install Cypress 🧪
        run: npx cypress install

      - name: Test 🧪
        uses: cypress-io/github-action@v2
        with:
          install: false
          start: yarn layer0 run --production
          cache-key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
        env:
          BASE_URL: http://localhost:3001
          SUPABASE_URL: ${{secrets.SUPABASE_URL}}
          SUPABASE_KEY: ${{secrets.SUPABASE_KEY}}

  deploy:
    needs:
      - lint
      - test
    env:
      NUXT_TELEMETRY_DISABLED: 1
      CI: 1
    name: Web Deployment 🚀
    if: contains(github.ref, 'refs/tags') == false || github.event_name == 'release'
    runs-on: ubuntu-20.04

    steps:
      - name: Check for layer0 deploy token 👀
        if: env.layer0_DEPLOY_TOKEN == ''
        run: |
          echo You must define the "layer0_DEPLOY_TOKEN" secret in GitHub project settings
          exit 1
        env:
          layer0_DEPLOY_TOKEN: ${{secrets.layer0_DEPLOY_TOKEN}}

      - name: Extract branch name 🛠
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV

      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Cache workspace 📦
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .cache/Cypress
            ./*
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-app-${{ github.sha }}

      # - name: Cache .layer0 build 📦
      #   uses: actions/cache@v2.1.4
      #   id: layer0-build-cache
      #   with:
      #     path: .layer0/
      #     key: layer0-build-${{ hashFiles('source/content/', 'layouts/', 'store/', 'pages/', 'middleware/', 'components/', 'nuxt.config.js', 'yarn.lock') }}

      - name: Configure Google Storage 🛠
        run: echo -n ${{ secrets.GCP_SA_KEY }} | base64 --decode > gcloud-key.json

      - name: Deploy to layer0 🚀
        run: yarn run layer0:deploy --skip-build ${{'--branch=$BRANCH_NAME' || ''}} --token=$layer0_DEPLOY_TOKEN ${{github.event_name == 'push' && env.BRANCH_NAME == 'main' && '--environment=staging' || ''}} ${{github.event_name == 'release' && '--environment=production' || ''}}
        env:
          layer0_DEPLOY_TOKEN: ${{secrets.XDN_DEPLOY_TOKEN}}
          BASE_URL: https://soulection.com
          SUPABASE_URL: ${{secrets.SUPABASE_URL}}
          SUPABASE_KEY: ${{secrets.SUPABASE_KEY}}
      - name: Tell Sentry 📢
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
